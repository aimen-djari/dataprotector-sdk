{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x17ecF6E26363A806D85f904008f3417dA723E5b5",
      "txHash": "0x56c85149bc4eba5c06ac28984df9f62685c058151b9122d0d5025700ddf1da1e",
      "kind": "transparent"
    },
    {
      "address": "0x0EC852F84D84C3437c8931a12d30f629d514c729",
      "txHash": "0x45fdc890415ec1688fb31dbce547e40cbb710891760ecee7ed180760e2152470",
      "kind": "transparent"
    },
    {
      "address": "0x22274DBBd9d9b0f18F947e3CD2eb058253a05972",
      "txHash": "0x048b9061b0f54e51928c1ab8c246bb7988d6e84c3bcdc7abe7bb641c6be6772e",
      "kind": "transparent"
    },
    {
      "address": "0x60E25C038D70A15364DAc11A042DB1dD7A2cccBC",
      "txHash": "0xf2d2bc34c39e556d0a7a232b9a6cccc575af632b4e78ea2ee332b06d4cacbf9c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ad48dde8e81b2910f78c6fd4c30e1e66500d1e847684cabf4ae809694fdda588": {
      "address": "0xa18AAC574c5314CfE34B506Cd2fFDA2115Efe908",
      "txHash": "0xfd8edc9950cddca83b804641bd65a069ba62955e58e3b08d5d1d6e65d32e07aa",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_iexecResultStorageProvider",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:37"
          },
          {
            "label": "_iexecResultStorageProxy",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:38"
          },
          {
            "label": "_salt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:39"
          },
          {
            "label": "_nextCollectionTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:46"
          },
          {
            "label": "earning",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:49"
          },
          {
            "label": "protectedDataDetails",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(ProtectedDataDetails)6359_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:51"
          },
          {
            "label": "collectionDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(CollectionDetails)6338_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)194_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IAddOnlyAppWhitelist)6162": {
            "label": "contract IAddOnlyAppWhitelist",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(ProtectedDataDetails)6359_storage)": {
            "label": "mapping(address => struct IDataProtectorSharing.ProtectedDataDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint48)": {
            "label": "mapping(address => uint48)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionDetails)6338_storage)": {
            "label": "mapping(uint256 => struct IDataProtectorSharing.CollectionDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionDetails)6338_storage": {
            "label": "struct IDataProtectorSharing.CollectionDetails",
            "members": [
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastSubscriptionExpiration",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "subscriptionParams",
                "type": "t_struct(SubscriptionParams)6756_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subscribers",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProtectedDataDetails)6359_storage": {
            "label": "struct IDataProtectorSharing.ProtectedDataDetails",
            "members": [
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addOnlyAppWhitelist",
                "type": "t_contract(IAddOnlyAppWhitelist)6162",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRentalExpiration",
                "type": "t_uint48",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "inSubscription",
                "type": "t_bool",
                "offset": 26,
                "slot": "1"
              },
              {
                "label": "rentingParams",
                "type": "t_struct(RentingParams)6591_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "renters",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sellingParams",
                "type": "t_struct(SellingParams)6671_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RentingParams)6591_storage": {
            "label": "struct IRental.RentingParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 9,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellingParams)6671_storage": {
            "label": "struct ISale.SellingParams",
            "members": [
              {
                "label": "isForSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SubscriptionParams)6756_storage": {
            "label": "struct ISubscription.SubscriptionParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 9,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint72": {
            "label": "uint72",
            "numberOfBytes": "9"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "35555c0200b0e5fece232c28643ef256994b81e16cfccd8809eb4d6022fc0839": {
      "address": "0xF5d2becE318D19BFE198AD9c30639D8A124c3fC5",
      "txHash": "0x342b0fd051eff52a5d497273c85ba163ded2739cb14c75313360dc245f7112d1",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_implementationAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(AddOnlyAppWhitelist)7099",
            "contract": "AddOnlyAppWhitelistRegistry",
            "src": "contracts/registry/AddOnlyAppWhitelistRegistry.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)194_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(AddOnlyAppWhitelist)7099": {
            "label": "contract AddOnlyAppWhitelist",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "aa07adbffb2d40766aff9f4b494bc70875fa82af070d5b5a481777634618f172": {
      "address": "0xDf62b3FddA0B2C9bc282f058eB80A270d80D25f2",
      "txHash": "0xf41d4bf73f1f349763b7fd77d517da2e58888da983d86ce9617ca0effb2e57ec",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_iexecResultStorageProvider",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:37"
          },
          {
            "label": "_iexecResultStorageProxy",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:38"
          },
          {
            "label": "_salt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "ManageOrders",
            "src": "contracts/ManageOrders.sol:39"
          },
          {
            "label": "_nextCollectionTokenId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:46"
          },
          {
            "label": "earning",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:49"
          },
          {
            "label": "protectedDataDetails",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(ProtectedDataDetails)6359_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:51"
          },
          {
            "label": "collectionDetails",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(CollectionDetails)6338_storage)",
            "contract": "DataProtectorSharing",
            "src": "contracts/DataProtectorSharing.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)35_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)194_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)95_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IAddOnlyAppWhitelist)6162": {
            "label": "contract IAddOnlyAppWhitelist",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(ProtectedDataDetails)6359_storage)": {
            "label": "mapping(address => struct IDataProtectorSharing.ProtectedDataDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint48)": {
            "label": "mapping(address => uint48)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CollectionDetails)6338_storage)": {
            "label": "mapping(uint256 => struct IDataProtectorSharing.CollectionDetails)",
            "numberOfBytes": "32"
          },
          "t_struct(CollectionDetails)6338_storage": {
            "label": "struct IDataProtectorSharing.CollectionDetails",
            "members": [
              {
                "label": "size",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastSubscriptionExpiration",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "subscriptionParams",
                "type": "t_struct(SubscriptionParams)6756_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subscribers",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProtectedDataDetails)6359_storage": {
            "label": "struct IDataProtectorSharing.ProtectedDataDetails",
            "members": [
              {
                "label": "collection",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "addOnlyAppWhitelist",
                "type": "t_contract(IAddOnlyAppWhitelist)6162",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRentalExpiration",
                "type": "t_uint48",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "inSubscription",
                "type": "t_bool",
                "offset": 26,
                "slot": "1"
              },
              {
                "label": "rentingParams",
                "type": "t_struct(RentingParams)6591_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "renters",
                "type": "t_mapping(t_address,t_uint48)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sellingParams",
                "type": "t_struct(SellingParams)6671_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RentingParams)6591_storage": {
            "label": "struct IRental.RentingParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 9,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellingParams)6671_storage": {
            "label": "struct ISale.SellingParams",
            "members": [
              {
                "label": "isForSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SubscriptionParams)6756_storage": {
            "label": "struct ISubscription.SubscriptionParams",
            "members": [
              {
                "label": "price",
                "type": "t_uint72",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "duration",
                "type": "t_uint48",
                "offset": 9,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint72": {
            "label": "uint72",
            "numberOfBytes": "9"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
